/**
 * SVWSOpenAPI
 * Ein Server f√ºr die Bereitstellung der Open-API eines SVWS-Servers und Anwendungen zum Zugriff auf die Daten dieses Servers auf [https://localhost](https://localhost).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: admin@localhost
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SvwsOpenApi);
  }
}(this, function(expect, SvwsOpenApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SvwsOpenApi.DebugOpenAPIApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DebugOpenAPIApi', function() {
    describe('debugFileFavicon16x16PNG', function() {
      it('should call debugFileFavicon16x16PNG successfully', function(done) {
        //uncomment below and update the code to test debugFileFavicon16x16PNG
        //instance.debugFileFavicon16x16PNG(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('debugFileFavicon32x32PNG', function() {
      it('should call debugFileFavicon32x32PNG successfully', function(done) {
        //uncomment below and update the code to test debugFileFavicon32x32PNG
        //instance.debugFileFavicon32x32PNG(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('debugFileIndexHTML', function() {
      it('should call debugFileIndexHTML successfully', function(done) {
        //uncomment below and update the code to test debugFileIndexHTML
        //instance.debugFileIndexHTML(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('debugFileSwaggerUIBundleJS', function() {
      it('should call debugFileSwaggerUIBundleJS successfully', function(done) {
        //uncomment below and update the code to test debugFileSwaggerUIBundleJS
        //instance.debugFileSwaggerUIBundleJS(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('debugFileSwaggerUIBundleJSMap', function() {
      it('should call debugFileSwaggerUIBundleJSMap successfully', function(done) {
        //uncomment below and update the code to test debugFileSwaggerUIBundleJSMap
        //instance.debugFileSwaggerUIBundleJSMap(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('debugFileSwaggerUICSS', function() {
      it('should call debugFileSwaggerUICSS successfully', function(done) {
        //uncomment below and update the code to test debugFileSwaggerUICSS
        //instance.debugFileSwaggerUICSS(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('debugFileSwaggerUICSSMap', function() {
      it('should call debugFileSwaggerUICSSMap successfully', function(done) {
        //uncomment below and update the code to test debugFileSwaggerUICSSMap
        //instance.debugFileSwaggerUICSSMap(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('debugFileSwaggerUIJS', function() {
      it('should call debugFileSwaggerUIJS successfully', function(done) {
        //uncomment below and update the code to test debugFileSwaggerUIJS
        //instance.debugFileSwaggerUIJS(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('debugFileSwaggerUIJSMap', function() {
      it('should call debugFileSwaggerUIJSMap successfully', function(done) {
        //uncomment below and update the code to test debugFileSwaggerUIJSMap
        //instance.debugFileSwaggerUIJSMap(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('debugFileSwaggerUIStandalonePresetJS', function() {
      it('should call debugFileSwaggerUIStandalonePresetJS successfully', function(done) {
        //uncomment below and update the code to test debugFileSwaggerUIStandalonePresetJS
        //instance.debugFileSwaggerUIStandalonePresetJS(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('debugFileSwaggerUIStandalonePresetJSMap', function() {
      it('should call debugFileSwaggerUIStandalonePresetJSMap successfully', function(done) {
        //uncomment below and update the code to test debugFileSwaggerUIStandalonePresetJSMap
        //instance.debugFileSwaggerUIStandalonePresetJSMap(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('debugRootWrong', function() {
      it('should call debugRootWrong successfully', function(done) {
        //uncomment below and update the code to test debugRootWrong
        //instance.debugRootWrong(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
