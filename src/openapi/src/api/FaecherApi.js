/**
 * SVWSOpenAPI
 * Ein Server für die Bereitstellung der Open-API eines SVWS-Servers und Anwendungen zum Zugriff auf die Daten dieses Servers auf [https://localhost](https://localhost).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: admin@localhost
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import FaecherlisteEintrag from '../model/FaecherlisteEintrag';
import GOStFach from '../model/GOStFach';

/**
* Faecher service.
* @module api/FaecherApi
* @version 1.0.0
*/
export default class FaecherApi {

    /**
    * Constructs a new FaecherApi. 
    * @alias module:api/FaecherApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Gibt eine Übersicht von allen Fächern zurück.
     * Erstellt eine Liste aller in der Datenbank vorhanden Fächer unter Angabe der ID, des Kürzels, des verwendeten Statistik-Kürzels, der Bezeichnung des Faches, ob es ein Fach der Oberstufe ist, einer Sortierreihenfolge und ob sie in der Anwendung sichtbar bzw. änderbar sein sollen. Dabei wird geprüft, ob der SVWS-Benutzer die notwendige Berechtigung zum Ansehen von Fächerdaten besitzt.
     * @param {String} schema 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link Array.<module:model/FaecherlisteEintrag>} and HTTP response
     */
    getFaecherListeWithHttpInfo(schema) {
      let postBody = null;
      // verify the required parameter 'schema' is set
      if (schema === undefined || schema === null) {
        throw new Error("Missing the required parameter 'schema' when calling getFaecherListe");
      }

      let pathParams = {
        'schema': schema
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [FaecherlisteEintrag];
      return this.apiClient.callApi(
        '/db/{schema}/api/faecher/liste', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Gibt eine Übersicht von allen Fächern zurück.
     * Erstellt eine Liste aller in der Datenbank vorhanden Fächer unter Angabe der ID, des Kürzels, des verwendeten Statistik-Kürzels, der Bezeichnung des Faches, ob es ein Fach der Oberstufe ist, einer Sortierreihenfolge und ob sie in der Anwendung sichtbar bzw. änderbar sein sollen. Dabei wird geprüft, ob der SVWS-Benutzer die notwendige Berechtigung zum Ansehen von Fächerdaten besitzt.
     * @param {String} schema 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link Array.<module:model/FaecherlisteEintrag>}
     */
    getFaecherListe(schema) {
      return this.getFaecherListeWithHttpInfo(schema)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Gibt eine Übersicht von allen Fächern der gymnasialen Oberstufe zurück.
     * Erstellt eine Liste aller in der Datenbank vorhanden Fächer der gymnasialen Oberstufe. Dabei wird geprüft, ob der SVWS-Benutzer die notwendige Berechtigung zum Ansehen der Fächerdaten besitzt.
     * @param {String} schema 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link Array.<module:model/GOStFach>} and HTTP response
     */
    getFaecherListeGOStWithHttpInfo(schema) {
      let postBody = null;
      // verify the required parameter 'schema' is set
      if (schema === undefined || schema === null) {
        throw new Error("Missing the required parameter 'schema' when calling getFaecherListeGOSt");
      }

      let pathParams = {
        'schema': schema
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GOStFach];
      return this.apiClient.callApi(
        '/db/{schema}/api/faecher/gost/liste', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Gibt eine Übersicht von allen Fächern der gymnasialen Oberstufe zurück.
     * Erstellt eine Liste aller in der Datenbank vorhanden Fächer der gymnasialen Oberstufe. Dabei wird geprüft, ob der SVWS-Benutzer die notwendige Berechtigung zum Ansehen der Fächerdaten besitzt.
     * @param {String} schema 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link Array.<module:model/GOStFach>}
     */
    getFaecherListeGOSt(schema) {
      return this.getFaecherListeGOStWithHttpInfo(schema)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
