/**
 * SVWSOpenAPI
 * Ein Server für die Bereitstellung der Open-API eines SVWS-Servers und Anwendungen zum Zugriff auf die Daten dieses Servers auf [https://localhost](https://localhost).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: admin@localhost
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AbschlussErgebnis from '../model/AbschlussErgebnis';
import AbschlussFaecher from '../model/AbschlussFaecher';

/**
* AbschlussGE service.
* @module api/AbschlussGEApi
* @version 1.0.0
*/
export default class AbschlussGEApi {

    /**
    * Constructs a new AbschlussGEApi. 
    * @alias module:api/AbschlussGEApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Führt eine Prüfung auf einen Hauptschulabschluss nach der Klasse 10 an einer Gesamtschule durch.
     * Prüft anhand der übergeben Fächerdaten, ob ein Hauptschulabschluss der Klasse 10 an einer Gesamtschule erreicht wird oder nicht. Im Falle, dass er nicht erreicht wird, werden ggf. Nachprüfungsfächer zurückgegeben.
     * @param {module:model/AbschlussFaecher} abschlussFaecher Die Fächerdaten für die Abschlussberechnung
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AbschlussErgebnis} and HTTP response
     */
    getAbschlussHA10WithHttpInfo(abschlussFaecher) {
      let postBody = abschlussFaecher;
      // verify the required parameter 'abschlussFaecher' is set
      if (abschlussFaecher === undefined || abschlussFaecher === null) {
        throw new Error("Missing the required parameter 'abschlussFaecher' when calling getAbschlussHA10");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AbschlussErgebnis;
      return this.apiClient.callApi(
        '/api/abschluss/ge/ha10', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Führt eine Prüfung auf einen Hauptschulabschluss nach der Klasse 10 an einer Gesamtschule durch.
     * Prüft anhand der übergeben Fächerdaten, ob ein Hauptschulabschluss der Klasse 10 an einer Gesamtschule erreicht wird oder nicht. Im Falle, dass er nicht erreicht wird, werden ggf. Nachprüfungsfächer zurückgegeben.
     * @param {module:model/AbschlussFaecher} abschlussFaecher Die Fächerdaten für die Abschlussberechnung
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AbschlussErgebnis}
     */
    getAbschlussHA10(abschlussFaecher) {
      return this.getAbschlussHA10WithHttpInfo(abschlussFaecher)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Führt eine Prüfung auf einen Hauptschulabschluss nach der Klasse 9 an einer Gesamtschule durch.
     * Prüft anhand der übergeben Fächerdaten, ob ein Hauptschulabschluss der Klasse 9 an einer Gesamtschule erreicht wird oder nicht. Im Falle, dass er nicht erreicht wird, werden ggf. Nachprüfungsfächer zurückgegeben.
     * @param {module:model/AbschlussFaecher} abschlussFaecher Die Fächerdaten für die Abschlussberechnung
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AbschlussErgebnis} and HTTP response
     */
    getAbschlussHA9WithHttpInfo(abschlussFaecher) {
      let postBody = abschlussFaecher;
      // verify the required parameter 'abschlussFaecher' is set
      if (abschlussFaecher === undefined || abschlussFaecher === null) {
        throw new Error("Missing the required parameter 'abschlussFaecher' when calling getAbschlussHA9");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AbschlussErgebnis;
      return this.apiClient.callApi(
        '/api/abschluss/ge/ha9', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Führt eine Prüfung auf einen Hauptschulabschluss nach der Klasse 9 an einer Gesamtschule durch.
     * Prüft anhand der übergeben Fächerdaten, ob ein Hauptschulabschluss der Klasse 9 an einer Gesamtschule erreicht wird oder nicht. Im Falle, dass er nicht erreicht wird, werden ggf. Nachprüfungsfächer zurückgegeben.
     * @param {module:model/AbschlussFaecher} abschlussFaecher Die Fächerdaten für die Abschlussberechnung
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AbschlussErgebnis}
     */
    getAbschlussHA9(abschlussFaecher) {
      return this.getAbschlussHA9WithHttpInfo(abschlussFaecher)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Führt eine Prüfung auf einen Mittleren Schulabschluss nach der Klasse 10 an einer Gesamtschule durch.
     * Prüft anhand der übergeben Fächerdaten, ob ein Mittlerer Schulabschluss nach der Klasse 10 an einer Gesamtschule erreicht wird oder nicht. Im Falle, dass er nicht erreicht wird, werden ggf. Nachprüfungsfächer zurückgegeben.
     * @param {module:model/AbschlussFaecher} abschlussFaecher Die Fächerdaten für die Abschlussberechnung
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AbschlussErgebnis} and HTTP response
     */
    getAbschlussMSAWithHttpInfo(abschlussFaecher) {
      let postBody = abschlussFaecher;
      // verify the required parameter 'abschlussFaecher' is set
      if (abschlussFaecher === undefined || abschlussFaecher === null) {
        throw new Error("Missing the required parameter 'abschlussFaecher' when calling getAbschlussMSA");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AbschlussErgebnis;
      return this.apiClient.callApi(
        '/api/abschluss/ge/msa', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Führt eine Prüfung auf einen Mittleren Schulabschluss nach der Klasse 10 an einer Gesamtschule durch.
     * Prüft anhand der übergeben Fächerdaten, ob ein Mittlerer Schulabschluss nach der Klasse 10 an einer Gesamtschule erreicht wird oder nicht. Im Falle, dass er nicht erreicht wird, werden ggf. Nachprüfungsfächer zurückgegeben.
     * @param {module:model/AbschlussFaecher} abschlussFaecher Die Fächerdaten für die Abschlussberechnung
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AbschlussErgebnis}
     */
    getAbschlussMSA(abschlussFaecher) {
      return this.getAbschlussMSAWithHttpInfo(abschlussFaecher)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Führt eine Prüfung auf die Berechtigung zum Besuch der gymnasialen Oberstufe im Rahmen eines Mittleren Schulabschluss nach der Klasse 10 an einer Gesamtschule durch.
     * Prüft anhand der übergeben Fächerdaten, ob die Berechtigung zum Besuch der gymnasialen Oberstufe im Rahmen eines Mittlerer Schulabschlusses nach der Klasse 10 an einer Gesamtschule erreicht wird oder nicht.
     * @param {module:model/AbschlussFaecher} abschlussFaecher Die Fächerdaten für die Prüfung der Berechtigung
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AbschlussErgebnis} and HTTP response
     */
    getAbschlussMSAQWithHttpInfo(abschlussFaecher) {
      let postBody = abschlussFaecher;
      // verify the required parameter 'abschlussFaecher' is set
      if (abschlussFaecher === undefined || abschlussFaecher === null) {
        throw new Error("Missing the required parameter 'abschlussFaecher' when calling getAbschlussMSAQ");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AbschlussErgebnis;
      return this.apiClient.callApi(
        '/api/abschluss/ge/msaq', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Führt eine Prüfung auf die Berechtigung zum Besuch der gymnasialen Oberstufe im Rahmen eines Mittleren Schulabschluss nach der Klasse 10 an einer Gesamtschule durch.
     * Prüft anhand der übergeben Fächerdaten, ob die Berechtigung zum Besuch der gymnasialen Oberstufe im Rahmen eines Mittlerer Schulabschlusses nach der Klasse 10 an einer Gesamtschule erreicht wird oder nicht.
     * @param {module:model/AbschlussFaecher} abschlussFaecher Die Fächerdaten für die Prüfung der Berechtigung
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AbschlussErgebnis}
     */
    getAbschlussMSAQ(abschlussFaecher) {
      return this.getAbschlussMSAQWithHttpInfo(abschlussFaecher)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Führt eine Abschlussprognose für die Gesamtschule aus.
     * Führt anhand der übergeben Fächerdaten eine Abschlussprognose für den Gesamtschulabschluss nach Klasse 9 bzw. Klasse 10 durch.Wird der Jahrgang 10 angegeben, so findet keine Prüfung auf den HA9 statt.
     * @param {module:model/AbschlussFaecher} abschlussFaecher Der Jahrgang und die Fächerdaten für die Prognose
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AbschlussErgebnis} and HTTP response
     */
    getPrognoseWithHttpInfo(abschlussFaecher) {
      let postBody = abschlussFaecher;
      // verify the required parameter 'abschlussFaecher' is set
      if (abschlussFaecher === undefined || abschlussFaecher === null) {
        throw new Error("Missing the required parameter 'abschlussFaecher' when calling getPrognose");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AbschlussErgebnis;
      return this.apiClient.callApi(
        '/api/abschluss/ge/prognose', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Führt eine Abschlussprognose für die Gesamtschule aus.
     * Führt anhand der übergeben Fächerdaten eine Abschlussprognose für den Gesamtschulabschluss nach Klasse 9 bzw. Klasse 10 durch.Wird der Jahrgang 10 angegeben, so findet keine Prüfung auf den HA9 statt.
     * @param {module:model/AbschlussFaecher} abschlussFaecher Der Jahrgang und die Fächerdaten für die Prognose
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/AbschlussErgebnis}
     */
    getPrognose(abschlussFaecher) {
      return this.getPrognoseWithHttpInfo(abschlussFaecher)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
