/**
 * SVWSOpenAPI
 * Ein Server für die Bereitstellung der Open-API eines SVWS-Servers und Anwendungen zum Zugriff auf die Daten dieses Servers auf [https://localhost](https://localhost).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: admin@localhost
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LehrerlisteEintrag model module.
 * @module model/LehrerlisteEintrag
 * @version 1.0.0
 */
class LehrerlisteEintrag {
    /**
     * Constructs a new <code>LehrerlisteEintrag</code>.
     * ein Eintrag eines Lehrers in der Lehrerliste.
     * @alias module:model/LehrerlisteEintrag
     * @param id {Number} die ID des Lehrers
     * @param kuerzel {String} das Kürzel des Lehrers
     * @param nachname {String} der Nachname des Lehrers
     * @param vorname {String} der Vorname des Lehrers
     * @param personTyp {module:model/LehrerlisteEintrag.PersonTypEnum} der Personaltyp des Lehrerlisten-Eintrags
     * @param sortierung {Number} die Sortierreihenfolge des Lehrerlisten-Eintrags
     * @param istSichtbar {Boolean} gibt an, ob der Eintrag in der Anwendung sichtbar sein soll oder nicht.
     * @param istAenderbar {Boolean} gibt an, ob der Eintrag in der Anwendung änderbar sein soll oder nicht.
     * @param istRelevantFuerStatistik {Boolean} gibt an, ob der Eintrag für die Schulstatistik relevant ist oder nicht.
     */
    constructor(id, kuerzel, nachname, vorname, personTyp, sortierung, istSichtbar, istAenderbar, istRelevantFuerStatistik) { 
        
        LehrerlisteEintrag.initialize(this, id, kuerzel, nachname, vorname, personTyp, sortierung, istSichtbar, istAenderbar, istRelevantFuerStatistik);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, kuerzel, nachname, vorname, personTyp, sortierung, istSichtbar, istAenderbar, istRelevantFuerStatistik) { 
        obj['id'] = id;
        obj['kuerzel'] = kuerzel;
        obj['nachname'] = nachname;
        obj['vorname'] = vorname;
        obj['personTyp'] = personTyp;
        obj['sortierung'] = sortierung;
        obj['istSichtbar'] = istSichtbar;
        obj['istAenderbar'] = istAenderbar;
        obj['istRelevantFuerStatistik'] = istRelevantFuerStatistik;
    }

    /**
     * Constructs a <code>LehrerlisteEintrag</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LehrerlisteEintrag} obj Optional instance to populate.
     * @return {module:model/LehrerlisteEintrag} The populated <code>LehrerlisteEintrag</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LehrerlisteEintrag();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('kuerzel')) {
                obj['kuerzel'] = ApiClient.convertToType(data['kuerzel'], 'String');
            }
            if (data.hasOwnProperty('nachname')) {
                obj['nachname'] = ApiClient.convertToType(data['nachname'], 'String');
            }
            if (data.hasOwnProperty('vorname')) {
                obj['vorname'] = ApiClient.convertToType(data['vorname'], 'String');
            }
            if (data.hasOwnProperty('personTyp')) {
                obj['personTyp'] = ApiClient.convertToType(data['personTyp'], 'String');
            }
            if (data.hasOwnProperty('sortierung')) {
                obj['sortierung'] = ApiClient.convertToType(data['sortierung'], 'Number');
            }
            if (data.hasOwnProperty('istSichtbar')) {
                obj['istSichtbar'] = ApiClient.convertToType(data['istSichtbar'], 'Boolean');
            }
            if (data.hasOwnProperty('istAenderbar')) {
                obj['istAenderbar'] = ApiClient.convertToType(data['istAenderbar'], 'Boolean');
            }
            if (data.hasOwnProperty('istRelevantFuerStatistik')) {
                obj['istRelevantFuerStatistik'] = ApiClient.convertToType(data['istRelevantFuerStatistik'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * die ID des Lehrers
 * @member {Number} id
 */
LehrerlisteEintrag.prototype['id'] = undefined;

/**
 * das Kürzel des Lehrers
 * @member {String} kuerzel
 */
LehrerlisteEintrag.prototype['kuerzel'] = undefined;

/**
 * der Nachname des Lehrers
 * @member {String} nachname
 */
LehrerlisteEintrag.prototype['nachname'] = undefined;

/**
 * der Vorname des Lehrers
 * @member {String} vorname
 */
LehrerlisteEintrag.prototype['vorname'] = undefined;

/**
 * der Personaltyp des Lehrerlisten-Eintrags
 * @member {module:model/LehrerlisteEintrag.PersonTypEnum} personTyp
 */
LehrerlisteEintrag.prototype['personTyp'] = undefined;

/**
 * die Sortierreihenfolge des Lehrerlisten-Eintrags
 * @member {Number} sortierung
 */
LehrerlisteEintrag.prototype['sortierung'] = undefined;

/**
 * gibt an, ob der Eintrag in der Anwendung sichtbar sein soll oder nicht.
 * @member {Boolean} istSichtbar
 */
LehrerlisteEintrag.prototype['istSichtbar'] = undefined;

/**
 * gibt an, ob der Eintrag in der Anwendung änderbar sein soll oder nicht.
 * @member {Boolean} istAenderbar
 */
LehrerlisteEintrag.prototype['istAenderbar'] = undefined;

/**
 * gibt an, ob der Eintrag für die Schulstatistik relevant ist oder nicht.
 * @member {Boolean} istRelevantFuerStatistik
 */
LehrerlisteEintrag.prototype['istRelevantFuerStatistik'] = undefined;





/**
 * Allowed values for the <code>personTyp</code> property.
 * @enum {String}
 * @readonly
 */
LehrerlisteEintrag['PersonTypEnum'] = {

    /**
     * value: "LEHRKRAFT"
     * @const
     */
    "LEHRKRAFT": "LEHRKRAFT",

    /**
     * value: "SEKRETARIAT"
     * @const
     */
    "SEKRETARIAT": "SEKRETARIAT",

    /**
     * value: "PERSONAL"
     * @const
     */
    "PERSONAL": "PERSONAL",

    /**
     * value: "EXTERN"
     * @const
     */
    "EXTERN": "EXTERN",

    /**
     * value: "SONSTIGE"
     * @const
     */
    "SONSTIGE": "SONSTIGE"
};



export default LehrerlisteEintrag;

