/**
 * SVWSOpenAPI
 * Ein Server für die Bereitstellung der Open-API eines SVWS-Servers und Anwendungen zum Zugriff auf die Daten dieses Servers auf [https://localhost](https://localhost).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: admin@localhost
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OrtsteilKatalogEintrag model module.
 * @module model/OrtsteilKatalogEintrag
 * @version 1.0.0
 */
class OrtsteilKatalogEintrag {
    /**
     * Constructs a new <code>OrtsteilKatalogEintrag</code>.
     * ein Eintrag in dem Katalog der Ortsteile.
     * @alias module:model/OrtsteilKatalogEintrag
     * @param id {Number} die ID des Katalog-Eintrags
     * @param ortsteil {String} der Name des Ortsteils
     * @param sortierung {Number} gibt die Position in der Sortierreihenfolge für die Katalog-Einträge an.
     * @param istSichtbar {Boolean} gibt an, ob der Eintrag in der Anwendung sichtbar sein soll oder nicht.
     * @param istAenderbar {Boolean} gibt an, ob der Eintrag in der Anwendung änderbar sein soll oder nicht.
     */
    constructor(id, ortsteil, sortierung, istSichtbar, istAenderbar) { 
        
        OrtsteilKatalogEintrag.initialize(this, id, ortsteil, sortierung, istSichtbar, istAenderbar);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, ortsteil, sortierung, istSichtbar, istAenderbar) { 
        obj['id'] = id;
        obj['ortsteil'] = ortsteil;
        obj['sortierung'] = sortierung;
        obj['istSichtbar'] = istSichtbar;
        obj['istAenderbar'] = istAenderbar;
    }

    /**
     * Constructs a <code>OrtsteilKatalogEintrag</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrtsteilKatalogEintrag} obj Optional instance to populate.
     * @return {module:model/OrtsteilKatalogEintrag} The populated <code>OrtsteilKatalogEintrag</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrtsteilKatalogEintrag();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('ort_id')) {
                obj['ort_id'] = ApiClient.convertToType(data['ort_id'], 'Number');
            }
            if (data.hasOwnProperty('ortsteil')) {
                obj['ortsteil'] = ApiClient.convertToType(data['ortsteil'], 'String');
            }
            if (data.hasOwnProperty('sortierung')) {
                obj['sortierung'] = ApiClient.convertToType(data['sortierung'], 'Number');
            }
            if (data.hasOwnProperty('istSichtbar')) {
                obj['istSichtbar'] = ApiClient.convertToType(data['istSichtbar'], 'Boolean');
            }
            if (data.hasOwnProperty('istAenderbar')) {
                obj['istAenderbar'] = ApiClient.convertToType(data['istAenderbar'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * die ID des Katalog-Eintrags
 * @member {Number} id
 */
OrtsteilKatalogEintrag.prototype['id'] = undefined;

/**
 * die ID des zugehörigen Ortes
 * @member {Number} ort_id
 */
OrtsteilKatalogEintrag.prototype['ort_id'] = undefined;

/**
 * der Name des Ortsteils
 * @member {String} ortsteil
 */
OrtsteilKatalogEintrag.prototype['ortsteil'] = undefined;

/**
 * gibt die Position in der Sortierreihenfolge für die Katalog-Einträge an.
 * @member {Number} sortierung
 */
OrtsteilKatalogEintrag.prototype['sortierung'] = undefined;

/**
 * gibt an, ob der Eintrag in der Anwendung sichtbar sein soll oder nicht.
 * @member {Boolean} istSichtbar
 */
OrtsteilKatalogEintrag.prototype['istSichtbar'] = undefined;

/**
 * gibt an, ob der Eintrag in der Anwendung änderbar sein soll oder nicht.
 * @member {Boolean} istAenderbar
 */
OrtsteilKatalogEintrag.prototype['istAenderbar'] = undefined;






export default OrtsteilKatalogEintrag;

