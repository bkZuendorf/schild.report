/**
 * SVWSOpenAPI
 * Ein Server f端r die Bereitstellung der Open-API eines SVWS-Servers und Anwendungen zum Zugriff auf die Daten dieses Servers auf [https://localhost](https://localhost).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: admin@localhost
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BelegpruefungErgebnisFehler model module.
 * @module model/BelegpruefungErgebnisFehler
 * @version 1.0.0
 */
class BelegpruefungErgebnisFehler {
    /**
     * Constructs a new <code>BelegpruefungErgebnisFehler</code>.
     * gibt die Informationen zu einem Fehler beim Ergebnis der Belegpr端fung an.
     * @alias module:model/BelegpruefungErgebnisFehler
     * @param code {String} Ein eindeutiger Fehlercode f端r den Fehler.
     * @param art {module:model/BelegpruefungErgebnisFehler.ArtEnum} Die Art der Belegungsfehlers.
     * @param beschreibung {String} Eine textuelle Beschreibung des Fehlers.
     */
    constructor(code, art, beschreibung) { 
        
        BelegpruefungErgebnisFehler.initialize(this, code, art, beschreibung);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, code, art, beschreibung) { 
        obj['code'] = code;
        obj['art'] = art;
        obj['beschreibung'] = beschreibung;
    }

    /**
     * Constructs a <code>BelegpruefungErgebnisFehler</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BelegpruefungErgebnisFehler} obj Optional instance to populate.
     * @return {module:model/BelegpruefungErgebnisFehler} The populated <code>BelegpruefungErgebnisFehler</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BelegpruefungErgebnisFehler();

            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('art')) {
                obj['art'] = ApiClient.convertToType(data['art'], 'String');
            }
            if (data.hasOwnProperty('beschreibung')) {
                obj['beschreibung'] = ApiClient.convertToType(data['beschreibung'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Ein eindeutiger Fehlercode f端r den Fehler.
 * @member {String} code
 */
BelegpruefungErgebnisFehler.prototype['code'] = undefined;

/**
 * Die Art der Belegungsfehlers.
 * @member {module:model/BelegpruefungErgebnisFehler.ArtEnum} art
 */
BelegpruefungErgebnisFehler.prototype['art'] = undefined;

/**
 * Eine textuelle Beschreibung des Fehlers.
 * @member {String} beschreibung
 */
BelegpruefungErgebnisFehler.prototype['beschreibung'] = undefined;





/**
 * Allowed values for the <code>art</code> property.
 * @enum {String}
 * @readonly
 */
BelegpruefungErgebnisFehler['ArtEnum'] = {

    /**
     * value: "BELEGUNG"
     * @const
     */
    "BELEGUNG": "BELEGUNG",

    /**
     * value: "SCHRIFTLICHKEIT"
     * @const
     */
    "SCHRIFTLICHKEIT": "SCHRIFTLICHKEIT",

    /**
     * value: "HINWEIS"
     * @const
     */
    "HINWEIS": "HINWEIS"
};



export default BelegpruefungErgebnisFehler;

