/**
 * SVWSOpenAPI
 * Ein Server f端r die Bereitstellung der Open-API eines SVWS-Servers und Anwendungen zum Zugriff auf die Daten dieses Servers auf [https://localhost](https://localhost).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: admin@localhost
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BelegpruefungErgebnisFehler from './BelegpruefungErgebnisFehler';

/**
 * The BelegpruefungErgebnis model module.
 * @module model/BelegpruefungErgebnis
 * @version 1.0.0
 */
class BelegpruefungErgebnis {
    /**
     * Constructs a new <code>BelegpruefungErgebnis</code>.
     * gibt die Informationen zu dem Ergebnis der Belegpr端fung an.
     * @alias module:model/BelegpruefungErgebnis
     * @param erfolgreich {Boolean} gibt an, ob die Belegpr端fung erfolgreich abgeschlossen wurde.
     * @param fehlercodes {Array.<module:model/BelegpruefungErgebnisFehler>} 
     */
    constructor(erfolgreich, fehlercodes) { 
        
        BelegpruefungErgebnis.initialize(this, erfolgreich, fehlercodes);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, erfolgreich, fehlercodes) { 
        obj['erfolgreich'] = erfolgreich;
        obj['fehlercodes'] = fehlercodes;
    }

    /**
     * Constructs a <code>BelegpruefungErgebnis</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BelegpruefungErgebnis} obj Optional instance to populate.
     * @return {module:model/BelegpruefungErgebnis} The populated <code>BelegpruefungErgebnis</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BelegpruefungErgebnis();

            if (data.hasOwnProperty('erfolgreich')) {
                obj['erfolgreich'] = ApiClient.convertToType(data['erfolgreich'], 'Boolean');
            }
            if (data.hasOwnProperty('fehlercodes')) {
                obj['fehlercodes'] = ApiClient.convertToType(data['fehlercodes'], [BelegpruefungErgebnisFehler]);
            }
            if (data.hasOwnProperty('log')) {
                obj['log'] = ApiClient.convertToType(data['log'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * gibt an, ob die Belegpr端fung erfolgreich abgeschlossen wurde.
 * @member {Boolean} erfolgreich
 */
BelegpruefungErgebnis.prototype['erfolgreich'] = undefined;

/**
 * @member {Array.<module:model/BelegpruefungErgebnisFehler>} fehlercodes
 */
BelegpruefungErgebnis.prototype['fehlercodes'] = undefined;

/**
 * @member {Array.<String>} log
 */
BelegpruefungErgebnis.prototype['log'] = undefined;






export default BelegpruefungErgebnis;

