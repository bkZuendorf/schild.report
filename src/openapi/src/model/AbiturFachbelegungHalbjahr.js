/**
 * SVWSOpenAPI
 * Ein Server f√ºr die Bereitstellung der Open-API eines SVWS-Servers und Anwendungen zum Zugriff auf die Daten dieses Servers auf [https://localhost](https://localhost).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: admin@localhost
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AbiturFachbelegungHalbjahr model module.
 * @module model/AbiturFachbelegungHalbjahr
 * @version 1.0.0
 */
class AbiturFachbelegungHalbjahr {
    /**
     * Constructs a new <code>AbiturFachbelegungHalbjahr</code>.
     * @alias module:model/AbiturFachbelegungHalbjahr
     */
    constructor() { 
        
        AbiturFachbelegungHalbjahr.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AbiturFachbelegungHalbjahr</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AbiturFachbelegungHalbjahr} obj Optional instance to populate.
     * @return {module:model/AbiturFachbelegungHalbjahr} The populated <code>AbiturFachbelegungHalbjahr</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AbiturFachbelegungHalbjahr();

            if (data.hasOwnProperty('halbjahr')) {
                obj['halbjahr'] = ApiClient.convertToType(data['halbjahr'], 'String');
            }
            if (data.hasOwnProperty('kursart')) {
                obj['kursart'] = ApiClient.convertToType(data['kursart'], 'String');
            }
            if (data.hasOwnProperty('schriftlich')) {
                obj['schriftlich'] = ApiClient.convertToType(data['schriftlich'], 'Boolean');
            }
            if (data.hasOwnProperty('biliSprache')) {
                obj['biliSprache'] = ApiClient.convertToType(data['biliSprache'], 'String');
            }
            if (data.hasOwnProperty('lehrerKuerzel')) {
                obj['lehrerKuerzel'] = ApiClient.convertToType(data['lehrerKuerzel'], 'String');
            }
            if (data.hasOwnProperty('wochenstunden')) {
                obj['wochenstunden'] = ApiClient.convertToType(data['wochenstunden'], 'Number');
            }
            if (data.hasOwnProperty('fehlstundenGesamt')) {
                obj['fehlstundenGesamt'] = ApiClient.convertToType(data['fehlstundenGesamt'], 'Number');
            }
            if (data.hasOwnProperty('fehlstundenUnentschuldigt')) {
                obj['fehlstundenUnentschuldigt'] = ApiClient.convertToType(data['fehlstundenUnentschuldigt'], 'Number');
            }
            if (data.hasOwnProperty('note')) {
                obj['note'] = ApiClient.convertToType(data['note'], 'String');
            }
            if (data.hasOwnProperty('block1gewertet')) {
                obj['block1gewertet'] = ApiClient.convertToType(data['block1gewertet'], 'Boolean');
            }
            if (data.hasOwnProperty('block1kursAufZeugnis')) {
                obj['block1kursAufZeugnis'] = ApiClient.convertToType(data['block1kursAufZeugnis'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/AbiturFachbelegungHalbjahr.HalbjahrEnum} halbjahr
 */
AbiturFachbelegungHalbjahr.prototype['halbjahr'] = undefined;

/**
 * @member {module:model/AbiturFachbelegungHalbjahr.KursartEnum} kursart
 */
AbiturFachbelegungHalbjahr.prototype['kursart'] = undefined;

/**
 * @member {Boolean} schriftlich
 */
AbiturFachbelegungHalbjahr.prototype['schriftlich'] = undefined;

/**
 * @member {String} biliSprache
 */
AbiturFachbelegungHalbjahr.prototype['biliSprache'] = undefined;

/**
 * @member {String} lehrerKuerzel
 */
AbiturFachbelegungHalbjahr.prototype['lehrerKuerzel'] = undefined;

/**
 * @member {Number} wochenstunden
 */
AbiturFachbelegungHalbjahr.prototype['wochenstunden'] = undefined;

/**
 * @member {Number} fehlstundenGesamt
 */
AbiturFachbelegungHalbjahr.prototype['fehlstundenGesamt'] = undefined;

/**
 * @member {Number} fehlstundenUnentschuldigt
 */
AbiturFachbelegungHalbjahr.prototype['fehlstundenUnentschuldigt'] = undefined;

/**
 * @member {module:model/AbiturFachbelegungHalbjahr.NoteEnum} note
 */
AbiturFachbelegungHalbjahr.prototype['note'] = undefined;

/**
 * @member {Boolean} block1gewertet
 */
AbiturFachbelegungHalbjahr.prototype['block1gewertet'] = undefined;

/**
 * @member {Boolean} block1kursAufZeugnis
 */
AbiturFachbelegungHalbjahr.prototype['block1kursAufZeugnis'] = undefined;





/**
 * Allowed values for the <code>halbjahr</code> property.
 * @enum {String}
 * @readonly
 */
AbiturFachbelegungHalbjahr['HalbjahrEnum'] = {

    /**
     * value: "EF1"
     * @const
     */
    "EF1": "EF1",

    /**
     * value: "EF2"
     * @const
     */
    "EF2": "EF2",

    /**
     * value: "Q11"
     * @const
     */
    "Q11": "Q11",

    /**
     * value: "Q12"
     * @const
     */
    "Q12": "Q12",

    /**
     * value: "Q21"
     * @const
     */
    "Q21": "Q21",

    /**
     * value: "Q22"
     * @const
     */
    "Q22": "Q22"
};


/**
 * Allowed values for the <code>kursart</code> property.
 * @enum {String}
 * @readonly
 */
AbiturFachbelegungHalbjahr['KursartEnum'] = {

    /**
     * value: "LK"
     * @const
     */
    "LK": "LK",

    /**
     * value: "GK"
     * @const
     */
    "GK": "GK",

    /**
     * value: "ZK"
     * @const
     */
    "ZK": "ZK",

    /**
     * value: "PJK"
     * @const
     */
    "PJK": "PJK",

    /**
     * value: "VTF"
     * @const
     */
    "VTF": "VTF"
};


/**
 * Allowed values for the <code>note</code> property.
 * @enum {String}
 * @readonly
 */
AbiturFachbelegungHalbjahr['NoteEnum'] = {

    /**
     * value: "1P"
     * @const
     */
    "1P": "1P",

    /**
     * value: "1"
     * @const
     */
    "1": "1",

    /**
     * value: "1M"
     * @const
     */
    "1M": "1M",

    /**
     * value: "2P"
     * @const
     */
    "2P": "2P",

    /**
     * value: "2"
     * @const
     */
    "2": "2",

    /**
     * value: "2M"
     * @const
     */
    "2M": "2M",

    /**
     * value: "3P"
     * @const
     */
    "3P": "3P",

    /**
     * value: "3"
     * @const
     */
    "3": "3",

    /**
     * value: "3M"
     * @const
     */
    "3M": "3M",

    /**
     * value: "4P"
     * @const
     */
    "4P": "4P",

    /**
     * value: "4"
     * @const
     */
    "4": "4",

    /**
     * value: "4M"
     * @const
     */
    "4M": "4M",

    /**
     * value: "5P"
     * @const
     */
    "5P": "5P",

    /**
     * value: "5"
     * @const
     */
    "5": "5",

    /**
     * value: "5M"
     * @const
     */
    "5M": "5M",

    /**
     * value: "6"
     * @const
     */
    "6": "6",

    /**
     * value: "E1"
     * @const
     */
    "E1": "E1",

    /**
     * value: "E2"
     * @const
     */
    "E2": "E2",

    /**
     * value: "E3"
     * @const
     */
    "E3": "E3",

    /**
     * value: "AT"
     * @const
     */
    "AT": "AT",

    /**
     * value: "AM"
     * @const
     */
    "AM": "AM",

    /**
     * value: "NB"
     * @const
     */
    "NB": "NB",

    /**
     * value: "NT"
     * @const
     */
    "NT": "NT",

    /**
     * value: "NE"
     * @const
     */
    "NE": "NE",

    /**
     * value: "LM"
     * @const
     */
    "LM": "LM",

    /**
     * value: ""
     * @const
     */
    "empty": ""
};



export default AbiturFachbelegungHalbjahr;

