/**
 * SVWSOpenAPI
 * Ein Server f√ºr die Bereitstellung der Open-API eines SVWS-Servers und Anwendungen zum Zugriff auf die Daten dieses Servers auf [https://localhost](https://localhost).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: admin@localhost
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BenutzerKennwort model module.
 * @module model/BenutzerKennwort
 * @version 1.0.0
 */
class BenutzerKennwort {
    /**
     * Constructs a new <code>BenutzerKennwort</code>.
     * Der Benutzername und das Kennwort eines Benutzers.
     * @alias module:model/BenutzerKennwort
     * @param user {String} Der Benutzername
     * @param password {String} Das Kennwort des Benutzers
     */
    constructor(user, password) { 
        
        BenutzerKennwort.initialize(this, user, password);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, user, password) { 
        obj['user'] = user;
        obj['password'] = password;
    }

    /**
     * Constructs a <code>BenutzerKennwort</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BenutzerKennwort} obj Optional instance to populate.
     * @return {module:model/BenutzerKennwort} The populated <code>BenutzerKennwort</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BenutzerKennwort();

            if (data.hasOwnProperty('user')) {
                obj['user'] = ApiClient.convertToType(data['user'], 'String');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Der Benutzername
 * @member {String} user
 */
BenutzerKennwort.prototype['user'] = undefined;

/**
 * Das Kennwort des Benutzers
 * @member {String} password
 */
BenutzerKennwort.prototype['password'] = undefined;






export default BenutzerKennwort;

