/**
 * SVWSOpenAPI
 * Ein Server für die Bereitstellung der Open-API eines SVWS-Servers und Anwendungen zum Zugriff auf die Daten dieses Servers auf [https://localhost](https://localhost).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: admin@localhost
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AbschlussErgebnis model module.
 * @module model/AbschlussErgebnis
 * @version 1.0.0
 */
class AbschlussErgebnis {
    /**
     * Constructs a new <code>AbschlussErgebnis</code>.
     * gibt die Informationen zu dem Ergebnis der Abschlussberechnung an.
     * @alias module:model/AbschlussErgebnis
     * @param erworben {Boolean} gibt an, ob der Abschluss erfolgreich erworben wurde, bzw. bei einer Prognose, ob ein ein Abschluss erworben wurde.
     * @param abschluss {module:model/AbschlussErgebnis.AbschlussEnum} gibt an, welcher Abschluss geprüft wurde.
     * @param npFaecher {Array.<String>} 
     */
    constructor(erworben, abschluss, npFaecher) { 
        
        AbschlussErgebnis.initialize(this, erworben, abschluss, npFaecher);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, erworben, abschluss, npFaecher) { 
        obj['erworben'] = erworben;
        obj['abschluss'] = abschluss;
        obj['npFaecher'] = npFaecher;
    }

    /**
     * Constructs a <code>AbschlussErgebnis</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AbschlussErgebnis} obj Optional instance to populate.
     * @return {module:model/AbschlussErgebnis} The populated <code>AbschlussErgebnis</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AbschlussErgebnis();

            if (data.hasOwnProperty('erworben')) {
                obj['erworben'] = ApiClient.convertToType(data['erworben'], 'Boolean');
            }
            if (data.hasOwnProperty('abschluss')) {
                obj['abschluss'] = ApiClient.convertToType(data['abschluss'], 'String');
            }
            if (data.hasOwnProperty('npFaecher')) {
                obj['npFaecher'] = ApiClient.convertToType(data['npFaecher'], ['String']);
            }
            if (data.hasOwnProperty('log')) {
                obj['log'] = ApiClient.convertToType(data['log'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * gibt an, ob der Abschluss erfolgreich erworben wurde, bzw. bei einer Prognose, ob ein ein Abschluss erworben wurde.
 * @member {Boolean} erworben
 */
AbschlussErgebnis.prototype['erworben'] = undefined;

/**
 * gibt an, welcher Abschluss geprüft wurde.
 * @member {module:model/AbschlussErgebnis.AbschlussEnum} abschluss
 */
AbschlussErgebnis.prototype['abschluss'] = undefined;

/**
 * @member {Array.<String>} npFaecher
 */
AbschlussErgebnis.prototype['npFaecher'] = undefined;

/**
 * @member {Array.<String>} log
 */
AbschlussErgebnis.prototype['log'] = undefined;





/**
 * Allowed values for the <code>abschluss</code> property.
 * @enum {String}
 * @readonly
 */
AbschlussErgebnis['AbschlussEnum'] = {

    /**
     * value: "OHNE_ABSCHLUSS"
     * @const
     */
    "OHNE_ABSCHLUSS": "OHNE_ABSCHLUSS",

    /**
     * value: "HA_9"
     * @const
     */
    "HA_9": "HA_9",

    /**
     * value: "HA_10"
     * @const
     */
    "HA_10": "HA_10",

    /**
     * value: "MSA"
     * @const
     */
    "MSA": "MSA",

    /**
     * value: "MSA_Q"
     * @const
     */
    "MSA_Q": "MSA_Q"
};



export default AbschlussErgebnis;

