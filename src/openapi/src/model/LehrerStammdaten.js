/**
 * SVWSOpenAPI
 * Ein Server für die Bereitstellung der Open-API eines SVWS-Servers und Anwendungen zum Zugriff auf die Daten dieses Servers auf [https://localhost](https://localhost).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: admin@localhost
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LehrerStammdaten model module.
 * @module model/LehrerStammdaten
 * @version 1.0.0
 */
class LehrerStammdaten {
    /**
     * Constructs a new <code>LehrerStammdaten</code>.
     * Die Stammdaten eines Lehrer-Eintrags.
     * @alias module:model/LehrerStammdaten
     * @param id {Number} die ID des Lehrers
     * @param kuerzel {String} das Kürzel
     * @param personalTyp {module:model/LehrerStammdaten.PersonalTypEnum} die Typ des Personals
     * @param nachname {String} der Nachname
     * @param vorname {String} der Vorname
     * @param geschlecht {module:model/LehrerStammdaten.GeschlechtEnum} das Geschlecht
     * @param geburtsdatum {String} das Geburtsdatum
     * @param foto {String} ggf. das Foto des Lehrers (jpg, Base64-kodiert)
     */
    constructor(id, kuerzel, personalTyp, nachname, vorname, geschlecht, geburtsdatum, foto) { 
        
        LehrerStammdaten.initialize(this, id, kuerzel, personalTyp, nachname, vorname, geschlecht, geburtsdatum, foto);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, kuerzel, personalTyp, nachname, vorname, geschlecht, geburtsdatum, foto) { 
        obj['id'] = id;
        obj['kuerzel'] = kuerzel;
        obj['personalTyp'] = personalTyp;
        obj['nachname'] = nachname;
        obj['vorname'] = vorname;
        obj['geschlecht'] = geschlecht;
        obj['geburtsdatum'] = geburtsdatum;
        obj['foto'] = foto;
    }

    /**
     * Constructs a <code>LehrerStammdaten</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LehrerStammdaten} obj Optional instance to populate.
     * @return {module:model/LehrerStammdaten} The populated <code>LehrerStammdaten</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LehrerStammdaten();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('kuerzel')) {
                obj['kuerzel'] = ApiClient.convertToType(data['kuerzel'], 'String');
            }
            if (data.hasOwnProperty('personalTyp')) {
                obj['personalTyp'] = ApiClient.convertToType(data['personalTyp'], 'String');
            }
            if (data.hasOwnProperty('anrede')) {
                obj['anrede'] = ApiClient.convertToType(data['anrede'], 'String');
            }
            if (data.hasOwnProperty('titel')) {
                obj['titel'] = ApiClient.convertToType(data['titel'], 'String');
            }
            if (data.hasOwnProperty('amtsbezeichnung')) {
                obj['amtsbezeichnung'] = ApiClient.convertToType(data['amtsbezeichnung'], 'String');
            }
            if (data.hasOwnProperty('nachname')) {
                obj['nachname'] = ApiClient.convertToType(data['nachname'], 'String');
            }
            if (data.hasOwnProperty('vorname')) {
                obj['vorname'] = ApiClient.convertToType(data['vorname'], 'String');
            }
            if (data.hasOwnProperty('geschlecht')) {
                obj['geschlecht'] = ApiClient.convertToType(data['geschlecht'], 'String');
            }
            if (data.hasOwnProperty('geburtsdatum')) {
                obj['geburtsdatum'] = ApiClient.convertToType(data['geburtsdatum'], 'String');
            }
            if (data.hasOwnProperty('staatsangehoerigkeitID')) {
                obj['staatsangehoerigkeitID'] = ApiClient.convertToType(data['staatsangehoerigkeitID'], 'String');
            }
            if (data.hasOwnProperty('strasse')) {
                obj['strasse'] = ApiClient.convertToType(data['strasse'], 'String');
            }
            if (data.hasOwnProperty('wohnortID')) {
                obj['wohnortID'] = ApiClient.convertToType(data['wohnortID'], 'Number');
            }
            if (data.hasOwnProperty('ortsteilID')) {
                obj['ortsteilID'] = ApiClient.convertToType(data['ortsteilID'], 'Number');
            }
            if (data.hasOwnProperty('telefon')) {
                obj['telefon'] = ApiClient.convertToType(data['telefon'], 'String');
            }
            if (data.hasOwnProperty('telefonMobil')) {
                obj['telefonMobil'] = ApiClient.convertToType(data['telefonMobil'], 'String');
            }
            if (data.hasOwnProperty('emailPrivat')) {
                obj['emailPrivat'] = ApiClient.convertToType(data['emailPrivat'], 'String');
            }
            if (data.hasOwnProperty('emailDienstlich')) {
                obj['emailDienstlich'] = ApiClient.convertToType(data['emailDienstlich'], 'String');
            }
            if (data.hasOwnProperty('foto')) {
                obj['foto'] = ApiClient.convertToType(data['foto'], 'String');
            }
        }
        return obj;
    }


}

/**
 * die ID des Lehrers
 * @member {Number} id
 */
LehrerStammdaten.prototype['id'] = undefined;

/**
 * das Kürzel
 * @member {String} kuerzel
 */
LehrerStammdaten.prototype['kuerzel'] = undefined;

/**
 * die Typ des Personals
 * @member {module:model/LehrerStammdaten.PersonalTypEnum} personalTyp
 */
LehrerStammdaten.prototype['personalTyp'] = undefined;

/**
 * ggf. die Anrede
 * @member {String} anrede
 */
LehrerStammdaten.prototype['anrede'] = undefined;

/**
 * ggf. ein akademischer Grad
 * @member {String} titel
 */
LehrerStammdaten.prototype['titel'] = undefined;

/**
 * ggf. die Amtsbezeichnung
 * @member {String} amtsbezeichnung
 */
LehrerStammdaten.prototype['amtsbezeichnung'] = undefined;

/**
 * der Nachname
 * @member {String} nachname
 */
LehrerStammdaten.prototype['nachname'] = undefined;

/**
 * der Vorname
 * @member {String} vorname
 */
LehrerStammdaten.prototype['vorname'] = undefined;

/**
 * das Geschlecht
 * @member {module:model/LehrerStammdaten.GeschlechtEnum} geschlecht
 */
LehrerStammdaten.prototype['geschlecht'] = undefined;

/**
 * das Geburtsdatum
 * @member {String} geburtsdatum
 */
LehrerStammdaten.prototype['geburtsdatum'] = undefined;

/**
 * ggf. die ID für die Staatsangehörigkeit
 * @member {String} staatsangehoerigkeitID
 */
LehrerStammdaten.prototype['staatsangehoerigkeitID'] = undefined;

/**
 * ggf. die Straße im Wohnort
 * @member {String} strasse
 */
LehrerStammdaten.prototype['strasse'] = undefined;

/**
 * ggf. die ID des Wohnortes
 * @member {Number} wohnortID
 */
LehrerStammdaten.prototype['wohnortID'] = undefined;

/**
 * ggf. die ID des Ortsteils im Wohnort
 * @member {Number} ortsteilID
 */
LehrerStammdaten.prototype['ortsteilID'] = undefined;

/**
 * ggf. die Telefonnummer
 * @member {String} telefon
 */
LehrerStammdaten.prototype['telefon'] = undefined;

/**
 * ggf. die Mobilnummer
 * @member {String} telefonMobil
 */
LehrerStammdaten.prototype['telefonMobil'] = undefined;

/**
 * ggf. die private Email-Adresse
 * @member {String} emailPrivat
 */
LehrerStammdaten.prototype['emailPrivat'] = undefined;

/**
 * ggf. die dienstliche Email-Adresse
 * @member {String} emailDienstlich
 */
LehrerStammdaten.prototype['emailDienstlich'] = undefined;

/**
 * ggf. das Foto des Lehrers (jpg, Base64-kodiert)
 * @member {String} foto
 */
LehrerStammdaten.prototype['foto'] = undefined;





/**
 * Allowed values for the <code>personalTyp</code> property.
 * @enum {String}
 * @readonly
 */
LehrerStammdaten['PersonalTypEnum'] = {

    /**
     * value: "LEHRKRAFT"
     * @const
     */
    "LEHRKRAFT": "LEHRKRAFT",

    /**
     * value: "SEKRETARIAT"
     * @const
     */
    "SEKRETARIAT": "SEKRETARIAT",

    /**
     * value: "PERSONAL"
     * @const
     */
    "PERSONAL": "PERSONAL",

    /**
     * value: "EXTERN"
     * @const
     */
    "EXTERN": "EXTERN",

    /**
     * value: "SONSTIGE"
     * @const
     */
    "SONSTIGE": "SONSTIGE"
};


/**
 * Allowed values for the <code>geschlecht</code> property.
 * @enum {String}
 * @readonly
 */
LehrerStammdaten['GeschlechtEnum'] = {

    /**
     * value: "M"
     * @const
     */
    "M": "M",

    /**
     * value: "W"
     * @const
     */
    "W": "W",

    /**
     * value: "D"
     * @const
     */
    "D": "D",

    /**
     * value: "OHNE_ANGABE"
     * @const
     */
    "OHNE_ANGABE": "OHNE_ANGABE"
};



export default LehrerStammdaten;

