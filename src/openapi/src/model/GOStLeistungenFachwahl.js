/**
 * SVWSOpenAPI
 * Ein Server f√ºr die Bereitstellung der Open-API eines SVWS-Servers und Anwendungen zum Zugriff auf die Daten dieses Servers auf [https://localhost](https://localhost).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: admin@localhost
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GOStFach from './GOStFach';
import GOStLeistungenFachbelegung from './GOStLeistungenFachbelegung';

/**
 * The GOStLeistungenFachwahl model module.
 * @module model/GOStLeistungenFachwahl
 * @version 1.0.0
 */
class GOStLeistungenFachwahl {
    /**
     * Constructs a new <code>GOStLeistungenFachwahl</code>.
     * @alias module:model/GOStLeistungenFachwahl
     */
    constructor() { 
        
        GOStLeistungenFachwahl.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GOStLeistungenFachwahl</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GOStLeistungenFachwahl} obj Optional instance to populate.
     * @return {module:model/GOStLeistungenFachwahl} The populated <code>GOStLeistungenFachwahl</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GOStLeistungenFachwahl();

            if (data.hasOwnProperty('fach')) {
                obj['fach'] = GOStFach.constructFromObject(data['fach']);
            }
            if (data.hasOwnProperty('abiturfach')) {
                obj['abiturfach'] = ApiClient.convertToType(data['abiturfach'], 'String');
            }
            if (data.hasOwnProperty('istFSNeu')) {
                obj['istFSNeu'] = ApiClient.convertToType(data['istFSNeu'], 'Boolean');
            }
            if (data.hasOwnProperty('belegungen')) {
                obj['belegungen'] = ApiClient.convertToType(data['belegungen'], [GOStLeistungenFachbelegung]);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/GOStFach} fach
 */
GOStLeistungenFachwahl.prototype['fach'] = undefined;

/**
 * @member {module:model/GOStLeistungenFachwahl.AbiturfachEnum} abiturfach
 */
GOStLeistungenFachwahl.prototype['abiturfach'] = undefined;

/**
 * @member {Boolean} istFSNeu
 */
GOStLeistungenFachwahl.prototype['istFSNeu'] = undefined;

/**
 * @member {Array.<module:model/GOStLeistungenFachbelegung>} belegungen
 */
GOStLeistungenFachwahl.prototype['belegungen'] = undefined;





/**
 * Allowed values for the <code>abiturfach</code> property.
 * @enum {String}
 * @readonly
 */
GOStLeistungenFachwahl['AbiturfachEnum'] = {

    /**
     * value: "LK1"
     * @const
     */
    "LK1": "LK1",

    /**
     * value: "LK2"
     * @const
     */
    "LK2": "LK2",

    /**
     * value: "AB3"
     * @const
     */
    "AB3": "AB3",

    /**
     * value: "AB4"
     * @const
     */
    "AB4": "AB4"
};



export default GOStLeistungenFachwahl;

